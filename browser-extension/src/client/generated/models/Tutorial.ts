/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Recommendation } from './Recommendation';
import {
    RecommendationFromJSON,
    RecommendationFromJSONTyped,
    RecommendationToJSON,
} from './Recommendation';
import type { Step } from './Step';
import {
    StepFromJSON,
    StepFromJSONTyped,
    StepToJSON,
} from './Step';

/**
 * 
 * @export
 * @interface Tutorial
 */
export interface Tutorial {
    /**
     * 
     * @type {string}
     * @memberof Tutorial
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Tutorial
     */
    description?: string;
    /**
     * 
     * @type {Array<Step>}
     * @memberof Tutorial
     */
    readonly steps: Array<Step>;
    /**
     * 
     * @type {Array<Recommendation>}
     * @memberof Tutorial
     */
    readonly recommendations: Array<Recommendation>;
}

/**
 * Check if a given object implements the Tutorial interface.
 */
export function instanceOfTutorial(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "steps" in value;
    isInstance = isInstance && "recommendations" in value;

    return isInstance;
}

export function TutorialFromJSON(json: any): Tutorial {
    return TutorialFromJSONTyped(json, false);
}

export function TutorialFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tutorial {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'steps': ((json['steps'] as Array<any>).map(StepFromJSON)),
        'recommendations': ((json['recommendations'] as Array<any>).map(RecommendationFromJSON)),
    };
}

export function TutorialToJSON(value?: Tutorial | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'description': value.description,
    };
}

